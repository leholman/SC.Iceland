sd(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlP"])
# negative controls
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"])
mean(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"])
sd(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"])
hist(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"])
hist(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"],breaks=1000)
hist(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"],breaks=100)
table(mtDat$SampleType=="ControlN")
# how many reads per each type of sample?
# experimental
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
mean(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
sd(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
# positive controls
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlP"])
mean(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlP"])
sd(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlP"])
# negative controls
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"])
mean(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"])
sd(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"])
hist(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"],breaks=100)
mean(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
neg.B5 <- read.csv("cleaneddata/negativedata/neg.B05.EUK.csv")
neg.L1 <- read.csv("cleaneddata/negativedata/neg.LN1.EUK.csv")
neg.L2 <- read.csv("cleaneddata/negativedata/neg.LN2.EUK.csv")
View(neg.L2)
View(neg.L1)
View(neg.B5)
GC01 <- read.csv("cleaneddata/combinedcoredata/EUK.GC01.csv")
PC19 <- read.csv("cleaneddata/combinedcoredata/EUK.PC019.csv")
# combine sense and antisense counts
mtDat$ReadCountTotal <- mtDat$SenseStripped+mtDat$AntSenseStripped
# How many reads were demultiplexed?
sum(mtDat$ReadCountTotal)
# combine sense and antisense counts
mtDat$ReadCountTotal <- mtDat$SenseDemultiplex+mtDat$AntiSenseDemultiplex
mtDat$ReadCountTotalS <- mtDat$SenseStripped+mtDat$AntSenseStripped
# How many reads were demultiplexed?
sum(mtDat$ReadCountTotal)
sum(mtDat$ReadCountTotalS)
output <- data.frame("Experimental"=rep(0,3),"NegativeControl"=rep(0,3),"PositiveControls"=rep(0,3),"Summed Totals"=rep(0,3))
View(output)
rownames(output) <- c("InitialDemulitplex","RevPrimerStripped","PostDADA2")
View(output)
output <- data.frame("Experimental"=rep(0,3),"NegativeControl"=rep(0,3),"PositiveControls"=rep(0,3),"SummedTotals"=rep(0,3))
rownames(output) <- c("InitialDemulitplex","RevPrimerStripped","PostDADA2")
# combine sense and antisense counts
mtDat$ReadCountTotal <- mtDat$SenseDemultiplex+mtDat$AntiSenseDemultiplex
mtDat$ReadCountTotalS <- mtDat$SenseStripped+mtDat$AntSenseStripped
# How many reads were demultiplexed?
output["InitialDemulitplex","SummedTotals"] <- sum(mtDat$ReadCountTotal)
View(output)
# How many reads were demultiplexed?
output["InitialDemulitplex","SummedTotals"] <- sum(mtDat$ReadCountTotal)
output["RevPrimerStripped","SummedTotals"] <- sum(mtDat$ReadCountTotalS)
output <- data.frame("ExperimentalMean"=rep(0,3),"ExperimentalSD"=rep(0,3),"NegativeControlMean"=rep(0,3),"NegativeControlSD"=rep(0,3),"PositiveControlsMean"=rep(0,3),"PositiveControlsSD"=rep(0,3),"SummedTotals"=rep(0,3))
rownames(output) <- c("InitialDemulitplex","RevPrimerStripped","PostDADA2")
View(output)
# combine sense and antisense counts
mtDat$ReadCountTotal <- mtDat$SenseDemultiplex+mtDat$AntiSenseDemultiplex
mtDat$ReadCountTotalS <- mtDat$SenseStripped+mtDat$AntSenseStripped
# How many reads were demultiplexed?
output["InitialDemulitplex","SummedTotals"] <- sum(mtDat$ReadCountTotal)
output["RevPrimerStripped","SummedTotals"] <- sum(mtDat$ReadCountTotalS)
mean(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
sd(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalMean"] <- mean(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalSD"] <- sd(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
View(output)
# how many reads per each type of sample?
# experimental
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalMean"] <- mean(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalSD"] <- sd(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalMean"] <- mean(mtDat$ReadCountyTotalS[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalSD"] <- sd(mtDat$ReadCountyTotalS[mtDat$SampleType=="Experimental"])
# combine sense and antisense counts
mtDat$ReadCountTotal <- mtDat$SenseDemultiplex+mtDat$AntiSenseDemultiplex
mtDat$ReadCountTotalS <- mtDat$SenseStripped+mtDat$AntSenseStripped
# How many reads were demultiplexed?
output["InitialDemulitplex","SummedTotals"] <- sum(mtDat$ReadCountTotal)
output["RevPrimerStripped","SummedTotals"] <- sum(mtDat$ReadCountTotalS)
# how many reads per each type of sample?
# experimental
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
View(output)
# negative controls
output["InitialDemulitplex","NegativeControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
View(output)
# Positive controls
output["InitialDemulitplex","PositiveControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
View(output)
output <- data.frame("ExperimentalMean"=rep(0,3),"ExperimentalSD"=rep(0,3),"NegativeControlMean"=rep(0,3),"NegativeControlSD"=rep(0,3),"PositiveControlMean"=rep(0,3),"PositiveControlSD"=rep(0,3),"SummedTotals"=rep(0,3))
rownames(output) <- c("InitialDemulitplex","RevPrimerStripped","PostDADA2")
# combine sense and antisense counts
mtDat$ReadCountTotal <- mtDat$SenseDemultiplex+mtDat$AntiSenseDemultiplex
mtDat$ReadCountTotalS <- mtDat$SenseStripped+mtDat$AntSenseStripped
# How many reads were demultiplexed?
output["InitialDemulitplex","SummedTotals"] <- sum(mtDat$ReadCountTotal)
output["RevPrimerStripped","SummedTotals"] <- sum(mtDat$ReadCountTotalS)
# how many reads per each type of sample?
# experimental
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
# negative controls
output["InitialDemulitplex","NegativeControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
# Positive controls
output["InitialDemulitplex","PositiveControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
# how many reads per each type of sample?
# experimental
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
# Positive controls
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlP"])
# negative controls
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"])
View(output)
View(output)
output <- data.frame("ExperimentalMean"=rep(0,3),"ExperimentalSD"=rep(0,3),"NegativeControlMean"=rep(0,3),"NegativeControlSD"=rep(0,3),"PositiveControlMean"=rep(0,3),"PositiveControlSD"=rep(0,3),"SummedTotalExperimental"=rep(0,3),"SummedTotalNegative"=rep(0,3),"SummedTotalPositive"=rep(0,3),"SummedTotals"=rep(0,3))
rownames(output) <- c("InitialDemulitplex","RevPrimerStripped","PostDADA2")
# combine sense and antisense counts
mtDat$ReadCountTotal <- mtDat$SenseDemultiplex+mtDat$AntiSenseDemultiplex
mtDat$ReadCountTotalS <- mtDat$SenseStripped+mtDat$AntSenseStripped
# How many reads were demultiplexed?
output["InitialDemulitplex","SummedTotals"] <- sum(mtDat$ReadCountTotal)
output["RevPrimerStripped","SummedTotals"] <- sum(mtDat$ReadCountTotalS)
# how many reads per each type of sample?
# experimental
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
# negative controls
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
# Positive controls
sum(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
View(output)
output <- data.frame("ExperimentalMean"=rep(0,3),"ExperimentalSD"=rep(0,3),"NegativeControlMean"=rep(0,3),"NegativeControlSD"=rep(0,3),"PositiveControlMean"=rep(0,3),"PositiveControlSD"=rep(0,3),"SummedTotalExperimental"=rep(0,3),"SummedTotalNegative"=rep(0,3),"SummedTotalPositive"=rep(0,3),"SummedTotals"=rep(0,3))
rownames(output) <- c("InitialDemulitplex","RevPrimerStripped","PostDADA2")
# combine sense and antisense counts
mtDat$ReadCountTotal <- mtDat$SenseDemultiplex+mtDat$AntiSenseDemultiplex
mtDat$ReadCountTotalS <- mtDat$SenseStripped+mtDat$AntSenseStripped
# How many reads were demultiplexed?
output["InitialDemulitplex","SummedTotals"] <- sum(mtDat$ReadCountTotal)
output["RevPrimerStripped","SummedTotals"] <- sum(mtDat$ReadCountTotalS)
# how many reads per each type of sample?
# experimental
output["InitialDemulitplex","SummedTotalExperimental"] <- sum(mtDat$ReadCountyTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","SummedTotalExperimental"] <- sum(mtDat$ReadCountyTotalC[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
# negative controls
output["InitialDemulitplex","SummedTotalNegative"] <- sum(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","SummedTotalNegative"] <- sum(mtDat$ReadCountyTotalS[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
# Positive controls
output["InitialDemulitplex","SummedTotalPositive"] <- sum(mtDat$ReadCountyTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","SummedTotalPositive"] <- sum(mtDat$ReadCountyTotalS[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output <- data.frame("ExperimentalMean"=rep(0,3),"ExperimentalSD"=rep(0,3),"NegativeControlMean"=rep(0,3),"NegativeControlSD"=rep(0,3),"PositiveControlMean"=rep(0,3),"PositiveControlSD"=rep(0,3),"SummedTotalExperimental"=rep(0,3),"SummedTotalNegative"=rep(0,3),"SummedTotalPositive"=rep(0,3),"SummedTotals"=rep(0,3))
rownames(output) <- c("InitialDemulitplex","RevPrimerStripped","PostDADA2")
# combine sense and antisense counts
mtDat$ReadCountTotal <- mtDat$SenseDemultiplex+mtDat$AntiSenseDemultiplex
mtDat$ReadCountTotalS <- mtDat$SenseStripped+mtDat$AntSenseStripped
# How many reads were demultiplexed?
output["InitialDemulitplex","SummedTotals"] <- sum(mtDat$ReadCountTotal)
output["RevPrimerStripped","SummedTotals"] <- sum(mtDat$ReadCountTotalS)
# how many reads per each type of sample?
# experimental
output["InitialDemulitplex","SummedTotalExperimental"] <- sum(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","SummedTotalExperimental"] <- sum(mtDat$ReadCountTotalC[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
# negative controls
output["InitialDemulitplex","SummedTotalNegative"] <- sum(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","SummedTotalNegative"] <- sum(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
# Positive controls
output["InitialDemulitplex","SummedTotalPositive"] <- sum(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","SummedTotalPositive"] <- sum(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output <- data.frame("ExperimentalMean"=rep(0,3),"ExperimentalSD"=rep(0,3),"NegativeControlMean"=rep(0,3),"NegativeControlSD"=rep(0,3),"PositiveControlMean"=rep(0,3),"PositiveControlSD"=rep(0,3),"SummedTotalExperimental"=rep(0,3),"SummedTotalNegative"=rep(0,3),"SummedTotalPositive"=rep(0,3),"SummedTotals"=rep(0,3))
rownames(output) <- c("InitialDemulitplex","RevPrimerStripped","PostDADA2")
# combine sense and antisense counts
mtDat$ReadCountTotal <- mtDat$SenseDemultiplex+mtDat$AntiSenseDemultiplex
mtDat$ReadCountTotalS <- mtDat$SenseStripped+mtDat$AntSenseStripped
# How many reads were demultiplexed?
output["InitialDemulitplex","SummedTotals"] <- sum(mtDat$ReadCountTotal)
output["RevPrimerStripped","SummedTotals"] <- sum(mtDat$ReadCountTotalS)
# how many reads per each type of sample?
# experimental
output["InitialDemulitplex","SummedTotalExperimental"] <- sum(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","SummedTotalExperimental"] <- sum(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
# negative controls
output["InitialDemulitplex","SummedTotalNegative"] <- sum(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","SummedTotalNegative"] <- sum(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
# Positive controls
output["InitialDemulitplex","SummedTotalPositive"] <- sum(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","SummedTotalPositive"] <- sum(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
View(output)
mtDat$UniqueID
View(PC19)
GC01 <- read.csv("cleaneddata/combinedcoredata/EUK.GC01.csv",row.names = 1)
PC19 <- read.csv("cleaneddata/combinedcoredata/EUK.PC019.csv",row.names = 1)
colSums(GC01)
colSums(PC19)
c(colSums(GC01),colSums(PC19))
mean(c(colSums(GC01),colSums(PC19)))
View(output)
mean(c(colSums(GC01),colSums(PC19)))
sd(c(colSums(GC01),colSums(PC19)))
View(output)
output["PostDADA2","ExperimentalMean"] <- mean(c(colSums(GC01),colSums(PC19)))
output["PostDADA2","ExperimentalSD"] <- sd(c(colSums(GC01),colSums(PC19)))
View(output)
sum(c(colSums(GC01),colSums(PC19)))
View(output)
output["PostDADA2","SummedTotalPositive"]  <- sum(c(colSums(GC01),colSums(PC19)))
View(output)
output["PostDADA2","ExperimentalMean"] <- mean(c(colSums(GC01),colSums(PC19)))
output["PostDADA2","ExperimentalSD"] <- sd(c(colSums(GC01),colSums(PC19)))
output["PostDADA2","SummedTotalExperimental"]  <- sum(c(colSums(GC01),colSums(PC19)))
c(colSums(neg.B5),colSums(neg.L1),colSums(neg.L2))
View(neg.B5)
View(neg.B5)
neg.B5 <- read.csv("cleaneddata/negativedata/neg.B05.EUK.csv",row.names = 1)
View(neg.B5)
neg.B5[,97]
neg.B5[,98]
neg.B5[,99]
neg.B5[,127]
neg.B5[,128]
neg.B5.dat <- neg.B5[,2:127]
View(neg.B5.dat)
neg.L1 <- read.csv("cleaneddata/negativedata/neg.LN1.EUK.csv",row.names = 1)
View(neg.L1)
neg.L2.dat <- neg.L2[,2:88]
View(neg.L2.dat)
neg.L2 <- read.csv("cleaneddata/negativedata/neg.LN2.EUK.csv",row.names = 1)
neg.L2.dat <- neg.L2[,2:88]
View(neg.L2.dat)
neg.L2.dat <- neg.L2[,2:87]
View(neg.L2.dat)
neg.L2[,88]
neg.L1[,74]
neg.L1[,73]
neg.L1[,72]
neg.B5[,128]
neg.B5 <- read.csv("cleaneddata/negativedata/neg.B05.EUK.csv",row.names = 1)
neg.B5.dat <- neg.B5[,2:127]
neg.L1 <- read.csv("cleaneddata/negativedata/neg.LN1.EUK.csv",row.names = 1)
neg.L1.dat <- neg.L1[,2:72]
neg.L2 <- read.csv("cleaneddata/negativedata/neg.LN2.EUK.csv",row.names = 1)
neg.L2.dat <- neg.L2[,2:87]
c(colSums(neg.B5),colSums(neg.L1),colSums(neg.L2))
c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat))
output[,,"SummedTotalNegative"]
output[,"SummedTotalNegative"]
output["PostDADA2","SummedTotalNegative"] <- sum(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)))
output["PostDADA2","NegativeControlMean"] <- mean(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)))
output["PostDADA2","NegativeControlSD"] <- sd(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)))
c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat))
## make a dataframe to collect results
output <- data.frame("ExperimentalMean"=rep(0,3),"ExperimentalSD"=rep(0,3),"NegativeControlMean"=rep(0,3),"NegativeControlSD"=rep(0,3),"PositiveControlMean"=rep(0,3),"PositiveControlSD"=rep(0,3),"SummedTotalExperimental"=rep(0,3),"SummedTotalNegative"=rep(0,3),"SummedTotalPositive"=rep(0,3),"SummedTotals"=rep(0,3))
rownames(output) <- c("InitialDemulitplex","RevPrimerStripped","PostDADA2")
# combine sense and antisense counts
mtDat$ReadCountTotal <- mtDat$SenseDemultiplex+mtDat$AntiSenseDemultiplex
mtDat$ReadCountTotalS <- mtDat$SenseStripped+mtDat$AntSenseStripped
# How many reads were demultiplexed?
output["InitialDemulitplex","SummedTotals"] <- sum(mtDat$ReadCountTotal)
output["RevPrimerStripped","SummedTotals"] <- sum(mtDat$ReadCountTotalS)
# how many reads per each type of sample?
# experimental
output["InitialDemulitplex","SummedTotalExperimental"] <- sum(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["InitialDemulitplex","ExperimentalSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","SummedTotalExperimental"] <- sum(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
output["RevPrimerStripped","ExperimentalSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="Experimental"])
# negative controls
output["InitialDemulitplex","SummedTotalNegative"] <- sum(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["InitialDemulitplex","NegativeControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","SummedTotalNegative"] <- sum(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
output["RevPrimerStripped","NegativeControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlN"])
# Positive controls
output["InitialDemulitplex","SummedTotalPositive"] <- sum(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlMean"] <- mean(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["InitialDemulitplex","PositiveControlSD"] <- sd(mtDat$ReadCountTotal[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","SummedTotalPositive"] <- sum(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlMean"] <- mean(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
output["RevPrimerStripped","PositiveControlSD"] <- sd(mtDat$ReadCountTotalS[mtDat$SampleType=="ControlP"])
## How many reads remaining after dada2
#Experimental
output["PostDADA2","SummedTotalExperimental"]  <- sum(c(colSums(GC01),colSums(PC19)))
output["PostDADA2","ExperimentalMean"] <- mean(c(colSums(GC01),colSums(PC19)))
output["PostDADA2","ExperimentalSD"] <- sd(c(colSums(GC01),colSums(PC19)))
#Negative
output["PostDADA2","SummedTotalNegative"] <- sum(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)))
output["PostDADA2","NegativeControlMean"] <- mean(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)))
output["PostDADA2","NegativeControlSD"] <- sd(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)))
View(output)
rowSum(GC01)==0
rowSums(GC01)==0
table(rowSums(GC01)==0)
table(rowSums(PC19)==0)
dim(GC01)
dim(GC01)[2]/8
dim(PC19)[2]/8
table(rowSums(GC01)!=0)
table(rowSums(PC19)!=0)
dim(GC01[rowSums(GC01)!=0,])
dim(GC01[rowSums(GC01)!=0,])[1]
dim(GC01[rowSums(PC19)!=0,])[1]
dim(GC01[rowSums(GC01)!=0,])[1]
dim(PC19[rowSums(PC19)!=0,])[1]
dim(GC01[rowSums(GC01)!=0,])[1]
dim(PC19[rowSums(PC19)!=0,])[1]
row.names(GC01[rowSums(GC01)!=0,])
unique(c(row.names(GC01[rowSums(GC01)!=0,]),row.names(GC01[rowSums(PC19)!=0,])))
length(unique(c(row.names(GC01[rowSums(GC01)!=0,]),row.names(GC01[rowSums(PC19)!=0,]))))
#GC01
dim(GC01[rowSums(GC01)!=0,])[1]
#PC19
dim(PC19[rowSums(PC19)!=0,])[1]
#BOTH
length(unique(c(row.names(GC01[rowSums(GC01)!=0,]),row.names(GC01[rowSums(PC19)!=0,]))))
View(output)
hist(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)))
hist(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)),breaks=50)
hist(log10(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)),breaks=50))
c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat))
log10(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)))
hist(log10(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat))),breaks=100)
hist(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)),breaks=100)
hist(log10(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat))),breaks=100,,xlab="log10 reads")
hist(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)),breaks=100,xlab="reads")
hist(log10(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat))),breaks=100,,xlab="log10 reads",main="")
hist(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)),breaks=100,xlab="reads",main="")
hist(log10(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat))),breaks=100,xlab="log10 reads",main="")
hist(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)),breaks=100,xlab="reads",main="")
negs <- c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat))
negs2 <- negs[negs>3000]
negs2 <- negs[negs<3000]
mtDat$SampleType
table(mtDat$SampleType)
sum(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)))/320
View(output)
data <- c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat))
mean(data)-data
sqrt((mean(data)-data)^2)
sqrt(sum(mean(data)-data)^2)
sqrt(sum(mean(data)-data)^2)/length(data)
sqrt(sum((mean(data)-data)^2))
sqrt(sum((mean(data)-data)^2))/length(data)
sd(data)
sd
var
C_cov
sqrt(sum((mean(data)-data)^2)/length(data))
sd(data)
(sum((mean(data)-data)^2))/length(data)
(sum((mean(data)-data)^2))/length(data)
sqrt((sum((mean(data)-data)^2))/length(data))
sd(data)
sqrt((sum((mean(data)-data)^2))/length(data)-1)
sqrt((sum((mean(c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)))-c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat)))^2))/320-1)
sum(negs2)/318
sqrt((sum((mean(negs2)-negs2)^2))/318-1)
#GC01
dim(GC01[rowSums(GC01)!=0,])[1]
#PC19
dim(PC19[rowSums(PC19)!=0,])[1]
dim(GC01/8)
dim(GC01)
dim(GC01)[2]/8
dim(PC19)[2]/8
dim(GC01)[2]/8+dim(PC19)[2]/8
dim(GC01)[2]/8
dim(PC19)[2]/8
dim(GC01)[2]
dim(PC19)[2]
## what if we get rid of the samples with large numbers of reads?
negs <- c(colSums(neg.B5.dat),colSums(neg.L1.dat),colSums(neg.L2.dat))
negs2 <- negs[negs<3000]
negs[negs>3000]
sum(negs2)/318
sqrt((sum((mean(negs2)-negs2)^2))/318-1)
dim(GC01)[2]
dim(PC19)[2]
#GC01
dim(GC01[rowSums(GC01)!=0,])[1]
#PC19
dim(PC19[rowSums(PC19)!=0,])[1]
#BOTH
length(unique(c(row.names(GC01[rowSums(GC01)!=0,]),row.names(GC01[rowSums(PC19)!=0,]))))
rownames(GC01[rowSums(GC01)!=0,])
# overlap
rownames(GC01[rowSums(GC01)!=0,]) %in% rownames(PC19[rowSums(PC19)!=0,])
# overlap
table(rownames(GC01[rowSums(GC01)!=0,]) %in% rownames(PC19[rowSums(PC19)!=0,]))
tax <- read.csv("taxonomy/EUK.cleaned.PR2.csv")
tax <- read.csv("taxonomy/EUK.cleaned.PR2.csv",row.names = 1)
tax.subset <- tax[unique(c(row.names(GC01[rowSums(GC01)!=0,]),row.names(GC01[rowSums(PC19)!=0,]))),]
View(tax.subset)
tax <- read.csv("taxonomy/EUK.cleaned.PR2.csv",row.names = 1)
tax.subset <- tax[unique(c(row.names(GC01[rowSums(GC01)!=0,]),row.names(GC01[rowSums(PC19)!=0,]))),]
View(tax.subset)
View(tax)
match(unique(c(row.names(GC01[rowSums(GC01)!=0,]),row.names(GC01[rowSums(PC19)!=0,]))),tax$X.1)
View(tax)
View(PC19)
View(tax)
tax.subset <- tax[match(unique(c(row.names(GC01[rowSums(GC01)!=0,]),row.names(GC01[rowSums(PC19)!=0,]))),tax$X.1),]
View(tax.subset)
tax.subset$
tax.subset$Supergroup
tax.subset$Supergroup
tax.subset$Domain
tax.subset$Domain.1
tax.subset$Domain.1>80
tax.subset$Domain[tax.subset$Domain.1>80]
table(tax.subset$Domain[tax.subset$Domain.1>80])
#taxonomic domain
table(tax.subset$Domain[tax.subset$Domain.1>80])
#taxonomic domain
sum(table(tax.subset$Domain[tax.subset$Domain.1>80]))
tax.subset.euk <- tax.subset[tax.subset$Domain=="Eukaryota"]
tax.subset.euk <- tax.subset[tax.subset$Domain=="Eukaryota",]
#Class
tax.subset.euk$Class[tax.subset.euk$Class.1>80]
#Class
unique(tax.subset.euk$Class[tax.subset.euk$Class.1>80])
#Order
unique(tax.subset.euk$Order[tax.subset.euk$Order.1>80])
#Family
unique(tax.subset.euk$Family[tax.subset.euk$Family.1>80])
#Genus
unique(tax.subset.euk$Genus[tax.subset.euk$genus.1>80])
#Genus
unique(tax.subset.euk$Genus[tax.subset.euk$Genus.1>80])
#Genus
na.omit(unique(tax.subset.euk$Genus[tax.subset.euk$Genus.1>80]))
#Genus
length(na.omit(unique(tax.subset.euk$Genus[tax.subset.euk$Genus.1>80])))
#Class
length(na.omit(unique(tax.subset.euk$Class[tax.subset.euk$Class.1>80])))
#Order
length(na.omit(unique(tax.subset.euk$Order[tax.subset.euk$Order.1>80])))
#Family
length(na.omit(unique(tax.subset.euk$Family[tax.subset.euk$Family.1>80])))
#Genus
length(na.omit(unique(tax.subset.euk$Genus[tax.subset.euk$Genus.1>80])))
tax.NCBI <- read.csv("taxonomy/EUK.combined.parsed.csv",row.names = 1)
