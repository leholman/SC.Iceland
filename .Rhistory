lane1 <- readxl::read_excel("DataSheet.xlsx",sheet = "Lane1")
View(lane1)
unique(lane1$SampleID)
sort(unique(lane1$SampleID))
grep(pattern = "GC",sort(unique(lane1$SampleID)))
sort(unique(lane1$SampleID))[grep(pattern = "GC",sort(unique(lane1$SampleID)))]
samples <- sort(unique(lane1$SampleID))[grep(pattern = "GC",sort(unique(lane1$SampleID)))]
sort(unique(lane1$SampleID))
samples <- sort(unique(lane1$SampleID))[grep(pattern = "GC1",sort(unique(lane1$SampleID)))]
laneA <- readxl::read_excel("DataSheet.xlsx",sheet = "LaneA")
sort(unique(laneA$SampleID))
sort(unique(laneA$SampleID))[grep(pattern = "PC019",sort(unique(laneA$SampleID)))]
samplesGC1
samplesGC1 <- sort(unique(lane1$SampleID))[grep(pattern = "GC1",sort(unique(lane1$SampleID)))]
samplesGC1
grep("Blank",samplesGC1)
samplesPC019<- sort(unique(laneA$SampleID))[grep(pattern = "PC019",sort(unique(laneA$SampleID)))]
grep("Blank",samplesPC019)
samplesPC019 <- samplesPC019[-grep("Blank",samplesPC019)]
samplesPC019
?grep
gsub("_","-",samplesPC019 )
sort(gsub("_","-",samplesPC019 ))
laneB <- readxl::read_excel("DataSheet.xlsx",sheet = "LaneB")
sort(unique(laneB$SampleID))
samplesPC019.2 <- sort(unique(laneB$SampleID))[grep(pattern = "PC019",sort(unique(laneB$SampleID)))]
samplesPC019.2 <- samplesPC019.2[-grep("Blank",samplesPC019.2)]
samplesPC019.2 <- sort(gsub("_","-",samplesPC019.2))
samplesPC019.2
samplesPC019.2 <- samplesPC019.2[-grep("B6",samplesPC019.2)]
samplesPC019all <- c(samplesPC019,samplesPC019.2)
samplesPC019all <- sort(c(samplesPC019,samplesPC019.2))
samplesPC019all
laneA <- readxl::read_excel("DataSheet.xlsx",sheet = "LaneA")
samplesPC019<- sort(unique(laneA$SampleID))[grep(pattern = "PC019",sort(unique(laneA$SampleID)))]
samplesPC019 <- samplesPC019[-grep("Blank",samplesPC019)]
samplesPC019 <- sort(gsub("_","-",samplesPC019 ))
laneB <- readxl::read_excel("DataSheet.xlsx",sheet = "LaneB")
samplesPC019.2 <- sort(unique(laneB$SampleID))[grep(pattern = "PC019",sort(unique(laneB$SampleID)))]
samplesPC019.2 <- samplesPC019.2[-grep("Blank",samplesPC019.2)]
samplesPC019.2 <- sort(gsub("_","-",samplesPC019.2))
samplesPC019.2 <- samplesPC019.2[-grep("B6",samplesPC019.2)]
samplesPC019all <- sort(c(samplesPC019,samplesPC019.2))
samplesPC019all
unique(samplesPC019all)
samplesPC022 <- sort(unique(laneB$SampleID))[grep(pattern = "PC022",sort(unique(laneB$SampleID)))]
samplesPC022
grep("B[0-9]",samplesPC022)
samplesPC022 <- sort(gsub("_","-",samplesPC022))
samplesPC022
samplesPC022 <- sort(unique(laneB$SampleID))[grep(pattern = "PC022",sort(unique(laneB$SampleID)))]
samplesPC022 <- samplesPC022[-grep("B[0-9]",samplesPC022)]
samplesPC022 <- sort(gsub("_","-",samplesPC022))
samplesPC022
samplesGC1
strsplit(samplesGC1)
strsplit(samplesGC1,"-")
strsplit(samplesGC1,"-")[[2]]
samplesGC1
gsub("IS-","",samplesGC1)
lane1 <- readxl::read_excel("DataSheet.xlsx",sheet = "Lane1")
samplesGC1 <- sort(unique(lane1$SampleID))[grep(pattern = "GC1",sort(unique(lane1$SampleID)))]
samplesGC1 <- gsub("IS-","",samplesGC1)
laneA <- readxl::read_excel("DataSheet.xlsx",sheet = "LaneA")
samplesPC019<- sort(unique(laneA$SampleID))[grep(pattern = "PC019",sort(unique(laneA$SampleID)))]
samplesPC019 <- samplesPC019[-grep("Blank",samplesPC019)]
samplesPC019 <- sort(gsub("_","-",samplesPC019 ))
laneB <- readxl::read_excel("DataSheet.xlsx",sheet = "LaneB")
samplesPC019.2 <- sort(unique(laneB$SampleID))[grep(pattern = "PC019",sort(unique(laneB$SampleID)))]
samplesPC019.2 <- samplesPC019.2[-grep("Blank",samplesPC019.2)]
samplesPC019.2 <- sort(gsub("_","-",samplesPC019.2))
samplesPC019.2 <- samplesPC019.2[-grep("B6",samplesPC019.2)]
samplesPC019all <- sort(c(samplesPC019,samplesPC019.2))
unique(samplesPC019all)
samplesPC022 <- sort(unique(laneB$SampleID))[grep(pattern = "PC022",sort(unique(laneB$SampleID)))]
samplesPC022 <- samplesPC022[-grep("B[0-9]",samplesPC022)]
samplesPC022 <- sort(gsub("_","-",samplesPC022))
allSamples <- strsplit(samplesGC1)
allSamples <- strsplit(samplesGC1,"-")
unlist(strsplit(samplesGC1,"-"))
sapply(strsplit(samplesGC1,"-"), `[`, 1)
sapply(strsplit(samplesGC1,"-"), `[`, 2)
samplesGC1
sapply(strsplit(samplesGC1,"-"), `[`, 2)
sapply(strsplit(samplesGC1,"-"), `[`, 1)
sapply(strsplit(samplesPC019all,"-"), `[`, 1)
sapply(strsplit(samplesPC022,"-"), `[`, 1)
c(sapply(strsplit(samplesGC1,"-"), `[`, 1),
sapply(strsplit(samplesPC019all,"-"), `[`, 1),
sapply(strsplit(samplesPC022,"-"), `[`, 1))
allSamples <- data.frame("ID"=c(samplesGC1,samplesPC019all,samplesPC022)
"Core"=c(sapply(strsplit(samplesGC1,"-"), `[`, 1),sapply(strsplit(samplesPC019all,"-"), `[`, 1),sapply(strsplit(samplesPC022,"-"), `[`, 1)),
allSamples <- data.frame("ID"=c(samplesGC1,samplesPC019all,samplesPC022),
"Core"=c(sapply(strsplit(samplesGC1,"-"), `[`, 1),sapply(strsplit(samplesPC019all,"-"), `[`, 1),sapply(strsplit(samplesPC022,"-"), `[`, 1)),
"Depth"="Core"=c(sapply(strsplit(samplesGC1,"-"), `[`, 2),sapply(strsplit(samplesPC019all,"-"), `[`, 2),sapply(strsplit(samplesPC022,"-"), `[`, 2)))
allSamples <- data.frame("ID"=c(samplesGC1,samplesPC019all,samplesPC022),
"Core"=c(sapply(strsplit(samplesGC1,"-"), `[`, 1),sapply(strsplit(samplesPC019all,"-"), `[`, 1),sapply(strsplit(samplesPC022,"-"), `[`, 1)),
"Depth"=c(sapply(strsplit(samplesGC1,"-"), `[`, 2),sapply(strsplit(samplesPC019all,"-"), `[`, 2),sapply(strsplit(samplesPC022,"-"), `[`, 2)))
View(allSamples)
as.numeric(c(sapply(strsplit(samplesGC1,"-"), `[`, 2),sapply(strsplit(samplesPC019all,"-"), `[`, 2),sapply(strsplit(samplesPC022,"-"), `[`, 2))))
as.numeric(c(sapply(strsplit(samplesGC1,"-"), `[`, 2),sapply(strsplit(samplesPC019all,"-"), `[`, 2),sapply(strsplit(samplesPC022,"-"), `[`, 2)))
allSamples <- data.frame("ID"=c(samplesGC1,samplesPC019all,samplesPC022),
"Core"=c(sapply(strsplit(samplesGC1,"-"), `[`, 1),sapply(strsplit(samplesPC019all,"-"), `[`, 1),sapply(strsplit(samplesPC022,"-"), `[`, 1)),
"Depth"=as.numeric(c(sapply(strsplit(samplesGC1,"-"), `[`, 2),sapply(strsplit(samplesPC019all,"-"), `[`, 2),sapply(strsplit(samplesPC022,"-"), `[`, 2))))
View(allSamples)
write.csv(allSamples,"Age.csv")
metadata<-read.csv("AgeOut.csv")
View(metadata)
EUK.data<- read.csv("rawData/EUK.B05-2006raw.names.csv",row.names = 1)
EUK.tax <- read.csv("taxonomy/EUK.parsed.csv",row.names = 1)
EUK.asvs <- read.fasta("rawdata/ASVs/EUK.DADA2.ASVs.fasta",as.string = TRUE)
??read.fasta
library("seqinr")
EUK.asvs <- read.fasta("rawdata/ASVs/EUK.DADA2.ASVs.fasta",as.string = TRUE)
EUK.asv.len <- nchar(unlist(EUK.asvs))
hist(EUK.asv.len,breaks=100)
colnames(EUK.data)
View(EUK.tax)
rownames(EUK.data)
match(rownames(EUK.data),EUK.tax$OTU)
test <- cbind(EUK.data,EUK.tax[match(rownames(EUK.data),EUK.tax$OTU)])
test <- cbind(EUK.data,EUK.tax[match(rownames(EUK.data),EUK.tax$OTU),])
View(test)
EUK.asvs
test <- cbind(EUK.data,EUK.tax[match(rownames(EUK.data),EUK.tax$OTU),],EUK.asv.len,EUK.asvs )
getSequence(EUK.asvs )
getSequence(EUK.asvs,as.string = T)
test <- cbind(EUK.data,EUK.tax[match(rownames(EUK.data),EUK.tax$OTU),],EUK.asv.len,getSequence(EUK.asvs,as.string = T) )
getSequence(EUK.asvs,as.string = T)
test <- cbind(EUK.data,EUK.tax[match(rownames(EUK.data),EUK.tax$OTU),],EUK.asv.len)
test <- cbind(EUK.data,unlist(EUK.asvs),EUK.tax[match(rownames(EUK.data),EUK.tax$OTU),],EUK.asv.len)
write.csv("test.csv",test)
write.csv(file = "test.csv",test)
library(ggOceanMapsData)
install.packages("ggOceanMapsData")
library(ggOceanMaps)
library(sf)
library(ggspatial)
##
raw.metadata <- read.csv("CoreMetaData.csv")
metadata <- raw.metadata[raw.metadata$CoreID!="GC06",]
basemap(limits = c(-25, -12, 63, 67), bathymetry = TRUE)
limits = c(-25, -12, 63, 67)
#basemap(limits = c(-25, -12, 63, 67), bathy.style = "rcb",rotate = TRUE)+
basemap(limits = c(-25, -12, 63, 67),rotate = TRUE)+
ggspatial::geom_spatial_point(aes(x = Lon, y = Lat),data = metadata, color = "red",crs = 4326)+
ggspatial::geom_spatial_text(aes(x = Lon, y = Lat+0.04,label=CoreID),data = metadata, color = "darkred",cex=2)
xlab("Longitude")+
ylab("Latitude")+
annotation_scale(location = "bl")+
annotation_north_arrow(location = "tr", which_north = "true", height = unit(0.9, "cm"), width = unit(0.9, "cm"))
basemap(limits = c(-25, -12, 63, 67), bathy.style = "rcb",rotate = TRUE)+
ggspatial::geom_spatial_point(aes(x = Lon, y = Lat),data = metadata, color = "red")+
xlab("Longitude")+
ylab("Latitude")
xlab("Longitude")+
ylab("Latitude")+
annotation_scale(location = "bl")+
annotation_north_arrow(location = "tr", which_north = "true", height = unit(0.9, "cm"), width = unit(0.9, "cm"))
#basemap(limits = c(-25, -12, 63, 67), bathy.style = "rcb",rotate = TRUE)+
basemap(limits = c(-25, -12, 63, 67),rotate = TRUE)+
ggspatial::geom_spatial_point(aes(x = Lon, y = Lat),data = metadata, color = "red",crs = 4326)+
ggspatial::geom_spatial_text(aes(x = Lon, y = Lat+0.04,label=CoreID),data = metadata, color = "darkred",cex=2)
basemap(limits = c(-25, -12, 63, 67), bathy.style = "rcb",rotate = TRUE)+
ggspatial::geom_spatial_point(aes(x = Lon, y = Lat),data = metadata, color = "red")+
xlab("Longitude")+
ylab("Latitude")
pdf("Maps/OverviewV1.pdf",height = 6,width = 9)
basemap(limits = c(-25, -12, 63, 67), bathy.style = "rcb",rotate = TRUE)+
#basemap(limits = c(-25, -12, 63, 67),rotate = TRUE)+
ggspatial::geom_spatial_point(aes(x = Lon, y = Lat),data = metadata, color = "red",crs = 4326)+
ggspatial::geom_spatial_text(aes(x = Lon, y = Lat+0.04,label=CoreID),data = metadata, color = "darkred",cex=2)
xlab("Longitude")+
ylab("Latitude")+
annotation_scale(location = "bl")+
annotation_north_arrow(location = "tr", which_north = "true", height = unit(0.9, "cm"), width = unit(0.9, "cm"))
pdf("Maps/OverviewV1.pdf",height = 6,width = 9)
basemap(limits = c(-25, -12, 63, 67), bathy.style = "rcb",rotate = TRUE)+
#basemap(limits = c(-25, -12, 63, 67),rotate = TRUE)+
ggspatial::geom_spatial_point(aes(x = Lon, y = Lat),data = metadata, color = "red",crs = 4326)+
ggspatial::geom_spatial_text(aes(x = Lon, y = Lat+0.04,label=CoreID),data = metadata, color = "darkred",cex=2)+
xlab("Longitude")+
ylab("Latitude")+
annotation_scale(location = "bl")+
annotation_north_arrow(location = "tr", which_north = "true", height = unit(0.9, "cm"), width = unit(0.9, "cm"))
dev.off()
pdf("Maps/OverviewV1.pdf",height = 6,width = 9)
basemap(limits = c(-25, -12, 63, 67), bathy.style = "rcb",rotate = TRUE)+
#basemap(limits = c(-25, -12, 63, 67),rotate = TRUE)+
ggspatial::geom_spatial_point(aes(x = Lon, y = Lat),data = metadata, color = "red",crs = 4326)+
#ggspatial::geom_spatial_text(aes(x = Lon, y = Lat+0.04,label=CoreID),data = metadata, color = "darkred",cex=2)+
xlab("Longitude")+
ylab("Latitude")+
annotation_scale(location = "bl")+
annotation_north_arrow(location = "tr", which_north = "true", height = unit(0.9, "cm"), width = unit(0.9, "cm"))
dev.off()
View(metadata)
library("seqinr")
metadata<-read.csv("AgeOut.csv")
metadata<-read.csv("metadata/AgeOut.csv")
metadata$rep <- gsub(".*-([0-9])$","\\1",metadata$SampleID)
metadata$SampleID
View(metadata)
ages<-read.csv("metadata/AgeOut.csv")
metadata.B05 <- read.csv("metadata/B05-2006.metadata.csv")
metadata.LN1 <- read.csv("metadata/LN1.metadata.csv")
# bring in metadata
ages<-read.csv("metadata/AgeOut.csv")
metadata.B05 <- read.csv("metadata/B05-2006.metadata.csv")
metadata.LN1 <- read.csv("metadata/LN1.metadata.csv")
metadata.LN2 <- read.csv("metadata/LN2.metadata.csv")
metadata$rep <- gsub(".*-([0-9])$","\\1",metadata$SampleID)
View(metadata.LN1)
EUK.data<- read.csv("rawData/EUK.B05-2006.raw.names.csv",row.names = 1)
EUK.tax <- read.csv("taxonomy/EUK.parsed.csv",row.names = 1)
EUK.data<- read.csv("rawData/EUK.B05-2006.raw.names.csv",row.names = 1)
EUK.tax <- read.csv("taxonomy/EUK.B05-2006.parsed.csv",row.names = 1)
EUK.asvs <- read.fasta("rawdata/ASVs/EUK.B05-2006.DADA2.ASVs.fasta",as.string = TRUE)
View(EUK.data)
B05.EUK.data<- read.csv("rawData/EUK.B05-2006.raw.names.csv",row.names = 1)
B05.EUK.tax <- read.csv("taxonomy/EUK.B05-2006.parsed.csv",row.names = 1)
B05.EUK.asvs <- read.fasta("rawdata/ASVs/EUK.B05-2006.DADA2.ASVs.fasta",as.string = TRUE)
length(B05.EUK.asvs)
sapply(B05.EUK.asvs,FUN=length)
nchar(B05.EUK.asvs)
test <- cbind(B05.EUK.data,unlist(B05.EUK.asvs),B05.EUK.tax[match(rownames(B05.EUK.data),B05.EUK.tax$OTU),],nchar(B05.EUK.asvs))
View(test)
write.csv("B05.EUK.test.csv",cbind(B05.EUK.data,unlist(B05.EUK.asvs),B05.EUK.tax[match(rownames(B05.EUK.data),B05.EUK.tax$OTU),],nchar(B05.EUK.asvs)))
write.csv(file="B05.EUK.test.csv",cbind(B05.EUK.data,unlist(B05.EUK.asvs),B05.EUK.tax[match(rownames(B05.EUK.data),B05.EUK.tax$OTU),],nchar(B05.EUK.asvs)))
B05.RIZ.data<- read.csv("rawData/RIZ.B05-2006.raw.names.csv",row.names = 1)
B05.RIZ.tax <- read.csv("taxonomy/RIZ.B05-2006.parsed.csv",row.names = 1)
B05.RIZ.asvs <- read.fasta("rawdata/ASVs/RIZ.B05-2006.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="B05.RIZ.test.csv",cbind(B05.RIZ.data,unlist(B05.RIZ.asvs),B05.RIZ.tax[match(rownames(B05.RIZ.data),B05.RIZ.tax$OTU),],nchar(B05.RIZ.asvs)))
B05.MAM.data<- read.csv("rawData/MAM.B05-2006.raw.names.csv",row.names = 1)
B05.MAM.tax <- read.csv("taxonomy/MAM.B05-2006.parsed.csv",row.names = 1)
B05.MAM.asvs <- read.fasta("rawdata/ASVs/MAM.B05-2006.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="B05.MAM.test.csv",cbind(B05.MAM.data,unlist(B05.MAM.asvs),B05.MAM.tax[match(rownames(B05.MAM.data),B05.MAM.tax$OTU),],nchar(B05.MAM.asvs)))
#LN1
LN1.EUK.data<- read.csv("rawData/EUK.LN1-2006.raw.names.csv",row.names = 1)
#LN1
LN1.EUK.data<- read.csv("rawData/EUK.LN1.raw.names.csv",row.names = 1)
LN1.EUK.tax <- read.csv("taxonomy/EUK.LN1.parsed.csv",row.names = 1)
LN1.EUK.asvs <- read.fasta("rawdata/ASVs/EUK.LN1.DADA2.ASVs.fasta",as.string = TRUE)
View(LN1.EUK.data)
colnames(LN1.EUK.data)
write.csv(file="LN1.EUK.test.csv",cbind(LN1.EUK.data,unlist(LN1.EUK.asvs),LN1.EUK.tax[match(rownames(LN1.EUK.data),LN1.EUK.tax$OTU),],nchar(LN1.EUK.asvs)))
LN1.RIZ.data<- read.csv("rawData/RIZ.LN1.raw.names.csv",row.names = 1)
LN1.RIZ.tax <- read.csv("taxonomy/RIZ.LN1.parsed.csv",row.names = 1)
LN1.RIZ.asvs <- read.fasta("rawdata/ASVs/RIZ.LN1.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="LN1.RIZ.test.csv",cbind(LN1.RIZ.data,unlist(LN1.RIZ.asvs),LN1.RIZ.tax[match(rownames(LN1.RIZ.data),LN1.RIZ.tax$OTU),],nchar(LN1.RIZ.asvs)))
LN1.MAM.data<- read.csv("rawData/MAM.LN1.raw.names.csv",row.names = 1)
LN1.MAM.tax <- read.csv("taxonomy/MAM.LN1.parsed.csv",row.names = 1)
LN1.MAM.asvs <- read.fasta("rawdata/ASVs/MAM.LN1.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="LN1.MAM.test.csv",cbind(LN1.MAM.data,unlist(LN1.MAM.asvs),LN1.MAM.tax[match(rownames(LN1.MAM.data),LN1.MAM.tax$OTU),],nchar(LN1.MAM.asvs)))
#LN2
LN2.EUK.data<- read.csv("rawData/EUK.LN2.raw.names.csv",row.names = 1)
LN2.EUK.tax <- read.csv("taxonomy/EUK.LN2.parsed.csv",row.names = 1)
LN2.EUK.asvs <- read.fasta("rawdata/ASVs/EUK.LN2.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="LN2.EUK.test.csv",cbind(LN2.EUK.data,unlist(LN2.EUK.asvs),LN2.EUK.tax[match(rownames(LN2.EUK.data),LN2.EUK.tax$OTU),],nchar(LN2.EUK.asvs)))
LN2.RIZ.data<- read.csv("rawData/RIZ.LN2.raw.names.csv",row.names = 1)
LN2.RIZ.tax <- read.csv("taxonomy/RIZ.LN2.parsed.csv",row.names = 1)
LN2.RIZ.asvs <- read.fasta("rawdata/ASVs/RIZ.LN2.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="LN2.RIZ.test.csv",cbind(LN2.RIZ.data,unlist(LN2.RIZ.asvs),LN2.RIZ.tax[match(rownames(LN2.RIZ.data),LN2.RIZ.tax$OTU),],nchar(LN2.RIZ.asvs)))
LN2.MAM.data<- read.csv("rawData/MAM.LN2.raw.names.csv",row.names = 1)
LN2.MAM.tax <- read.csv("taxonomy/MAM.LN2.parsed.csv",row.names = 1)
LN2.MAM.asvs <- read.fasta("rawdata/ASVs/MAM.LN2.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="LN2.MAM.test.csv",cbind(LN2.MAM.data,unlist(LN2.MAM.asvs),LN2.MAM.tax[match(rownames(LN2.MAM.data),LN2.MAM.tax$OTU),],nchar(LN2.MAM.asvs)))
#B05
B05.EUK.data<- read.csv("rawData/EUK.B05-2006.raw.names.csv",row.names = 1)
B05.EUK.tax <- read.csv("taxonomy/EUK.B05-2006.parsed.csv",row.names = 1)
B05.EUK.asvs <- read.fasta("rawdata/ASVs/EUK.B05-2006.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/B05.EUK.test.csv",t(cbind(B05.EUK.data,unlist(B05.EUK.asvs),B05.EUK.tax[match(rownames(B05.EUK.data),B05.EUK.tax$OTU),],nchar(B05.EUK.asvs))))
B05.RIZ.data<- read.csv("rawData/RIZ.B05-2006.raw.names.csv",row.names = 1)
B05.RIZ.tax <- read.csv("taxonomy/RIZ.B05-2006.parsed.csv",row.names = 1)
B05.RIZ.asvs <- read.fasta("rawdata/ASVs/RIZ.B05-2006.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/B05.RIZ.test.csv",t(cbind(B05.RIZ.data,unlist(B05.RIZ.asvs),B05.RIZ.tax[match(rownames(B05.RIZ.data),B05.RIZ.tax$OTU),],nchar(B05.RIZ.asvs))))
B05.MAM.data<- read.csv("rawData/MAM.B05-2006.raw.names.csv",row.names = 1)
B05.MAM.tax <- read.csv("taxonomy/MAM.B05-2006.parsed.csv",row.names = 1)
B05.MAM.asvs <- read.fasta("rawdata/ASVs/MAM.B05-2006.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/B05.MAM.test.csv",t(cbind(B05.MAM.data,unlist(B05.MAM.asvs),B05.MAM.tax[match(rownames(B05.MAM.data),B05.MAM.tax$OTU),],nchar(B05.MAM.asvs))))
#LN1
LN1.EUK.data<- read.csv("rawData/EUK.LN1.raw.names.csv",row.names = 1)
LN1.EUK.tax <- read.csv("taxonomy/EUK.LN1.parsed.csv",row.names = 1)
LN1.EUK.asvs <- read.fasta("rawdata/ASVs/EUK.LN1.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN1.EUK.test.csv",t(cbind(LN1.EUK.data,unlist(LN1.EUK.asvs),LN1.EUK.tax[match(rownames(LN1.EUK.data),LN1.EUK.tax$OTU),],nchar(LN1.EUK.asvs))))
LN1.RIZ.data<- read.csv("rawData/RIZ.LN1.raw.names.csv",row.names = 1)
LN1.RIZ.tax <- read.csv("taxonomy/RIZ.LN1.parsed.csv",row.names = 1)
LN1.RIZ.asvs <- read.fasta("rawdata/ASVs/RIZ.LN1.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN1.RIZ.test.csv",t(cbind(LN1.RIZ.data,unlist(LN1.RIZ.asvs),LN1.RIZ.tax[match(rownames(LN1.RIZ.data),LN1.RIZ.tax$OTU),],nchar(LN1.RIZ.asvs))))
LN1.MAM.data<- read.csv("rawData/MAM.LN1.raw.names.csv",row.names = 1)
LN1.MAM.tax <- read.csv("taxonomy/MAM.LN1.parsed.csv",row.names = 1)
LN1.MAM.asvs <- read.fasta("rawdata/ASVs/MAM.LN1.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN1.MAM.test.csv",t(cbind(LN1.MAM.data,unlist(LN1.MAM.asvs),LN1.MAM.tax[match(rownames(LN1.MAM.data),LN1.MAM.tax$OTU),],nchar(LN1.MAM.asvs))))
#LN2
LN2.EUK.data<- read.csv("rawData/EUK.LN2.raw.names.csv",row.names = 1)
LN2.EUK.tax <- read.csv("taxonomy/EUK.LN2.parsed.csv",row.names = 1)
LN2.EUK.asvs <- read.fasta("rawdata/ASVs/EUK.LN2.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN2.EUK.test.csv",t(cbind(LN2.EUK.data,unlist(LN2.EUK.asvs),LN2.EUK.tax[match(rownames(LN2.EUK.data),LN2.EUK.tax$OTU),],nchar(LN2.EUK.asvs))))
LN2.RIZ.data<- read.csv("rawData/RIZ.LN2.raw.names.csv",row.names = 1)
LN2.RIZ.tax <- read.csv("taxonomy/RIZ.LN2.parsed.csv",row.names = 1)
LN2.RIZ.asvs <- read.fasta("rawdata/ASVs/RIZ.LN2.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN2.RIZ.test.csv",t(cbind(LN2.RIZ.data,unlist(LN2.RIZ.asvs),LN2.RIZ.tax[match(rownames(LN2.RIZ.data),LN2.RIZ.tax$OTU),],nchar(LN2.RIZ.asvs))))
LN2.MAM.data<- read.csv("rawData/MAM.LN2.raw.names.csv",row.names = 1)
LN2.MAM.tax <- read.csv("taxonomy/MAM.LN2.parsed.csv",row.names = 1)
LN2.MAM.asvs <- read.fasta("rawdata/ASVs/MAM.LN2.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN2.MAM.test.csv",t(cbind(LN2.MAM.data,unlist(LN2.MAM.asvs),LN2.MAM.tax[match(rownames(LN2.MAM.data),LN2.MAM.tax$OTU),],nchar(LN2.MAM.asvs))))
#B05
B05.EUK.data<- read.csv("rawData/EUK.B05-2006.raw.names.csv",row.names = 1)
B05.EUK.tax <- read.csv("taxonomy/EUK.B05-2006.parsed.csv",row.names = 1)
B05.EUK.asvs <- read.fasta("rawdata/ASVs/EUK.B05-2006.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/B05.EUK.test.csv",cbind(B05.EUK.data,unlist(B05.EUK.asvs),B05.EUK.tax[match(rownames(B05.EUK.data),B05.EUK.tax$OTU),],nchar(B05.EUK.asvs)))
B05.RIZ.data<- read.csv("rawData/RIZ.B05-2006.raw.names.csv",row.names = 1)
B05.RIZ.tax <- read.csv("taxonomy/RIZ.B05-2006.parsed.csv",row.names = 1)
B05.RIZ.asvs <- read.fasta("rawdata/ASVs/RIZ.B05-2006.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/B05.RIZ.test.csv",cbind(B05.RIZ.data,unlist(B05.RIZ.asvs),B05.RIZ.tax[match(rownames(B05.RIZ.data),B05.RIZ.tax$OTU),],nchar(B05.RIZ.asvs)))
B05.MAM.data<- read.csv("rawData/MAM.B05-2006.raw.names.csv",row.names = 1)
B05.MAM.tax <- read.csv("taxonomy/MAM.B05-2006.parsed.csv",row.names = 1)
B05.MAM.asvs <- read.fasta("rawdata/ASVs/MAM.B05-2006.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/B05.MAM.test.csv",cbind(B05.MAM.data,unlist(B05.MAM.asvs),B05.MAM.tax[match(rownames(B05.MAM.data),B05.MAM.tax$OTU),],nchar(B05.MAM.asvs)))
#LN1
LN1.EUK.data<- read.csv("rawData/EUK.LN1.raw.names.csv",row.names = 1)
LN1.EUK.tax <- read.csv("taxonomy/EUK.LN1.parsed.csv",row.names = 1)
LN1.EUK.asvs <- read.fasta("rawdata/ASVs/EUK.LN1.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN1.EUK.test.csv",cbind(LN1.EUK.data,unlist(LN1.EUK.asvs),LN1.EUK.tax[match(rownames(LN1.EUK.data),LN1.EUK.tax$OTU),],nchar(LN1.EUK.asvs)))
LN1.RIZ.data<- read.csv("rawData/RIZ.LN1.raw.names.csv",row.names = 1)
LN1.RIZ.tax <- read.csv("taxonomy/RIZ.LN1.parsed.csv",row.names = 1)
LN1.RIZ.asvs <- read.fasta("rawdata/ASVs/RIZ.LN1.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN1.RIZ.test.csv",cbind(LN1.RIZ.data,unlist(LN1.RIZ.asvs),LN1.RIZ.tax[match(rownames(LN1.RIZ.data),LN1.RIZ.tax$OTU),],nchar(LN1.RIZ.asvs)))
LN1.MAM.data<- read.csv("rawData/MAM.LN1.raw.names.csv",row.names = 1)
LN1.MAM.tax <- read.csv("taxonomy/MAM.LN1.parsed.csv",row.names = 1)
LN1.MAM.asvs <- read.fasta("rawdata/ASVs/MAM.LN1.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN1.MAM.test.csv",cbind(LN1.MAM.data,unlist(LN1.MAM.asvs),LN1.MAM.tax[match(rownames(LN1.MAM.data),LN1.MAM.tax$OTU),],nchar(LN1.MAM.asvs)))
#LN2
LN2.EUK.data<- read.csv("rawData/EUK.LN2.raw.names.csv",row.names = 1)
LN2.EUK.tax <- read.csv("taxonomy/EUK.LN2.parsed.csv",row.names = 1)
LN2.EUK.asvs <- read.fasta("rawdata/ASVs/EUK.LN2.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN2.EUK.test.csv",cbind(LN2.EUK.data,unlist(LN2.EUK.asvs),LN2.EUK.tax[match(rownames(LN2.EUK.data),LN2.EUK.tax$OTU),],nchar(LN2.EUK.asvs)))
LN2.RIZ.data<- read.csv("rawData/RIZ.LN2.raw.names.csv",row.names = 1)
LN2.RIZ.tax <- read.csv("taxonomy/RIZ.LN2.parsed.csv",row.names = 1)
LN2.RIZ.asvs <- read.fasta("rawdata/ASVs/RIZ.LN2.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN2.RIZ.test.csv",cbind(LN2.RIZ.data,unlist(LN2.RIZ.asvs),LN2.RIZ.tax[match(rownames(LN2.RIZ.data),LN2.RIZ.tax$OTU),],nchar(LN2.RIZ.asvs)))
LN2.MAM.data<- read.csv("rawData/MAM.LN2.raw.names.csv",row.names = 1)
LN2.MAM.tax <- read.csv("taxonomy/MAM.LN2.parsed.csv",row.names = 1)
LN2.MAM.asvs <- read.fasta("rawdata/ASVs/MAM.LN2.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN2.MAM.test.csv",cbind(LN2.MAM.data,unlist(LN2.MAM.asvs),LN2.MAM.tax[match(rownames(LN2.MAM.data),LN2.MAM.tax$OTU),],nchar(LN2.MAM.asvs)))
library(dada2)
test <- collapseNoMismatch(read.csv("~/Desktop/WP4.LN2/6.mappings/OTUtabs/EUK.LN2.raw.csv",row.names = 1))
test <- collapseNoMismatch(t(read.csv("~/Desktop/WP4.LN2/6.mappings/OTUtabs/EUK.LN2.raw.csv",row.names = 1)))
View(LN2.MAM.data)
test2 <- t(read.csv("~/Desktop/WP4.LN2/6.mappings/OTUtabs/EUK.LN2.raw.csv",row.names = 1))
test2 <- as.data.frame(t(read.csv("~/Desktop/WP4.LN2/6.mappings/OTUtabs/EUK.LN2.raw.csv",row.names = 1)))
test2 <- collapseNoMismatch(t(read.csv("~/Desktop/WP4.LN2/6.mappings/OTUtabs/EUK.LN2.raw.csv",row.names = 1)))
LN1.EUK.lulu.data<- read.csv("rawData/EUK.LN1.lulu.csv",row.names = 1)
write.csv(file="cleaneddata/testdata/LN1.EUK.test.csv",cbind(LN1.EUK.lulu.data,
unlist(LN1.EUK.asvs)[match(rownames(LN1.EUK.lulu.data),names(LN1.EUK.asvs)),],
LN1.EUK.tax[match(rownames(LN1.EUK.lulu.data),LN1.EUK.tax$OTU),],
nchar(LN1.EUK.asvs)[match(rownames(LN1.EUK.lulu.data),names(LN1.EUK.asvs)),]))
match(rownames(LN1.EUK.lulu.data),names(LN1.EUK.asvs))
write.csv(file="cleaneddata/testdata/LN1.EUK.test.csv",cbind(LN1.EUK.lulu.data,
unlist(LN1.EUK.asvs)[match(rownames(LN1.EUK.lulu.data),names(LN1.EUK.asvs))],
LN1.EUK.tax[match(rownames(LN1.EUK.lulu.data),LN1.EUK.tax$OTU),],
nchar(LN1.EUK.asvs)[match(rownames(LN1.EUK.lulu.data),names(LN1.EUK.asvs))]))
LN1.EUK.data<- read.csv("rawData/EUK.LN1.raw.names.csv",row.names = 1)
LN1.EUK.tax <- read.csv("taxonomy/EUK.LN1.parsed.csv",row.names = 1)
LN1.EUK.asvs <- read.fasta("rawdata/ASVs/EUK.LN1.DADA2.ASVs.fasta",as.string = TRUE)
write.csv(file="cleaneddata/testdata/LN1.EUK.test.csv",cbind(LN1.EUK.data,unlist(LN1.EUK.asvs),LN1.EUK.tax[match(rownames(LN1.EUK.data),LN1.EUK.tax$OTU),],nchar(LN1.EUK.asvs)))
LN1.EUK.lulu.data<- read.csv("rawData/EUK.LN1.lulu.csv",row.names = 1)
write.csv(file="cleaneddata/testdata/LN1.EUK.lulu.test.csv",cbind(LN1.EUK.lulu.data,
unlist(LN1.EUK.asvs)[match(rownames(LN1.EUK.lulu.data),names(LN1.EUK.asvs))],
LN1.EUK.tax[match(rownames(LN1.EUK.lulu.data),LN1.EUK.tax$OTU),],
nchar(LN1.EUK.asvs)[match(rownames(LN1.EUK.lulu.data),names(LN1.EUK.asvs))]))
