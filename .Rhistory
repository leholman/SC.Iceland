prediction <- cbind(prediction,predict(gam1,newdata = prediction,se.fit = TRUE))
prediction$uppCI <- prediction$fit+prediction$se.fit*1.96
prediction$lwrCI <- prediction$fit-prediction$se.fit*1.96
prediction2 <- data.frame("year2"=min(year2):max(year2))
prediction2 <- cbind(prediction2,predict(gam2,newdata = prediction2,se.fit = TRUE))
prediction2$uppCI <- prediction2$fit+prediction2$se.fit*1.96
prediction2$lwrCI <- prediction2$fit-prediction2$se.fit*1.96
pdf("figures/EUK.pro.richness.pdf",height=4,width=10)
par(mar=c(4.1,4.1,2.1,6.1))
plot(1950-ages$mean[match(names(EUK.P19.pro.richness),ages$ID2)],
EUK.P19.pro.richness,
xlim=c(-1550,2000),bty = 'n',ylab="ASV richness",xlab="Year",
pch=16,col="slateblue")
points(1950-ages$mean[match(names(EUK.GC1.pro.richness),ages$ID2)],
EUK.GC1.pro.richness,
pch=16,col="lightblue4")
polygon(c(prediction$year, rev(prediction$year)), c(prediction$uppCI, rev(prediction$lwrCI)), col=add.alpha('mediumslateblue',0.3), border=NA)
points(prediction$year,prediction$fit,type="l",col="navyblue",lwd=3)
polygon(c(prediction2$year, rev(prediction2$year)), c(prediction2$uppCI, rev(prediction2$lwrCI)), col=add.alpha('lightblue4',0.3), border=NA)
points(prediction2$year,prediction2$fit,type="l",col="cadetblue4",lwd=3)
dev.off()
#bacteria
#PC19
EUK.P19.avr.bac.filt <- EUK.p19.avr.bac
#EUK.P19.avr.filt[EUK.P19.nREPS < 2] <- 0
EUK.P19.bac.richness <- colSums(make_binary(EUK.P19.avr.bac.filt*1000000000000,2))
#GC1
EUK.GC1.avr.bac.filt <- EUK.GC1.avr.bac
#EUK.GC1.avr.filt[EUK.GC1.nREPS < 2] <- 0
EUK.GC1.bac.richness <- colSums(make_binary(EUK.GC1.avr.bac.filt*1000000000000,2))
### plot
year1 <- 1950-ages$mean[match(names(EUK.P19.bac.richness),ages$ID2)]
value1 <- EUK.P19.bac.richness
year2 <- 1950-ages$mean[match(names(EUK.GC1.bac.richness),ages$ID2)]
value2 <- EUK.GC1.bac.richness
gam1 <- gam(value1 ~ s(year1,k=20), method = "REML")
gam2 <- gam(value2 ~ s(year2,k=20), method = "REML")
plot(gam1)
plot(gam2)
prediction <- data.frame("year1"=min(year1):max(year1))
prediction <- cbind(prediction,predict(gam1,newdata = prediction,se.fit = TRUE))
prediction$uppCI <- prediction$fit+prediction$se.fit*1.96
prediction$lwrCI <- prediction$fit-prediction$se.fit*1.96
prediction2 <- data.frame("year2"=min(year2):max(year2))
prediction2 <- cbind(prediction2,predict(gam2,newdata = prediction2,se.fit = TRUE))
prediction2$uppCI <- prediction2$fit+prediction2$se.fit*1.96
prediction2$lwrCI <- prediction2$fit-prediction2$se.fit*1.96
pdf("figures/EUK.bac.richness.pdf",height=4,width=10)
par(mar=c(4.1,4.1,2.1,6.1))
plot(1950-ages$mean[match(names(EUK.P19.bac.richness),ages$ID2)],
EUK.P19.bac.richness,
xlim=c(-1550,2000),bty = 'n',ylab="ASV richness",xlab="Year",
pch=16,col="slateblue",ylim=c(50,500))
points(1950-ages$mean[match(names(EUK.GC1.bac.richness),ages$ID2)],
EUK.GC1.bac.richness,
pch=16,col="lightblue4")
polygon(c(prediction$year, rev(prediction$year)), c(prediction$uppCI, rev(prediction$lwrCI)), col=add.alpha('mediumslateblue',0.3), border=NA)
points(prediction$year,prediction$fit,type="l",col="navyblue",lwd=3)
polygon(c(prediction2$year, rev(prediction2$year)), c(prediction2$uppCI, rev(prediction2$lwrCI)), col=add.alpha('lightblue4',0.3), border=NA)
points(prediction2$year,prediction2$fit,type="l",col="cadetblue4",lwd=3)
dev.off()
## subset richness @ 3 & 6 replicates
#PC19
par(mfrow=c(4,2))
for (num in 0:7){
EUK.P19.avr.filt <- EUK.P19.avr
EUK.P19.avr.filt[EUK.P19.nREPS < num] <- 0
plot(1950-ages$mean[match(gsub("(.*)_[0-9]$","\\1",colnames(EUK.P19.avr.filt)),ages$ID2)],colSums(make_binary(EUK.P19.avr.filt*100000000000,1)),ylab="",xlab="",pch=16,main=paste0("> ",num," +ive reps"))
}
#PC19
EUK.P19.avr.met.filt <- EUK.p19.avr.met
#EUK.P19.avr.filt[EUK.P19.nREPS < 2] <- 0
EUK.P19.met.richness <- colSums(make_binary(EUK.P19.avr.met.filt*1000000000000,2))
#GC1
EUK.GC1.avr.met.filt <- EUK.GC1.avr.met
#EUK.GC1.avr.filt[EUK.GC1.nREPS < 2] <- 0
EUK.GC1.met.richness <- colSums(make_binary(EUK.GC1.avr.met.filt*1000000000000,2))
### plot
year1 <- 1950-ages$mean[match(names(EUK.P19.met.richness),ages$ID2)]
value1 <- EUK.P19.met.richness
year2 <- 1950-ages$mean[match(names(EUK.GC1.met.richness),ages$ID2)]
value2 <- EUK.GC1.met.richness
gam1 <- gam(value1 ~ s(year1,k=20), method = "REML")
gam2 <- gam(value2 ~ s(year2,k=20), method = "REML")
plot(gam1)
plot(gam2)
prediction <- data.frame("year1"=min(year1):max(year1))
prediction <- cbind(prediction,predict(gam1,newdata = prediction,se.fit = TRUE))
prediction$uppCI <- prediction$fit+prediction$se.fit*1.96
prediction$lwrCI <- prediction$fit-prediction$se.fit*1.96
prediction2 <- data.frame("year2"=min(year2):max(year2))
prediction2 <- cbind(prediction2,predict(gam2,newdata = prediction2,se.fit = TRUE))
prediction2$uppCI <- prediction2$fit+prediction2$se.fit*1.96
prediction2$lwrCI <- prediction2$fit-prediction2$se.fit*1.96
pdf("figures/EUK.met.richness.pdf",height=4,width=10)
par(mar=c(4.1,4.1,2.1,6.1))
plot(1950-ages$mean[match(names(EUK.P19.met.richness),ages$ID2)],
EUK.P19.met.richness,
xlim=c(-1550,2000),bty = 'n',ylab="ASV richness",xlab="Year",
pch=16,col="slateblue")
points(1950-ages$mean[match(names(EUK.GC1.met.richness),ages$ID2)],
EUK.GC1.met.richness,
pch=16,col="lightblue4")
polygon(c(prediction$year, rev(prediction$year)), c(prediction$uppCI, rev(prediction$lwrCI)), col=add.alpha('mediumslateblue',0.3), border=NA)
points(prediction$year,prediction$fit,type="l",col="navyblue",lwd=3)
polygon(c(prediction2$year, rev(prediction2$year)), c(prediction2$uppCI, rev(prediction2$lwrCI)), col=add.alpha('lightblue4',0.3), border=NA)
points(prediction2$year,prediction2$fit,type="l",col="cadetblue4",lwd=3)
dev.off()
#protists
#PC19
EUK.P19.avr.pro.filt <- EUK.p19.avr.pro
#EUK.P19.avr.filt[EUK.P19.nREPS < 2] <- 0
EUK.P19.pro.richness <- colSums(make_binary(EUK.P19.avr.pro.filt*1000000000000,2))
#GC1
EUK.GC1.avr.pro.filt <- EUK.GC1.avr.pro
#EUK.GC1.avr.filt[EUK.GC1.nREPS < 2] <- 0
EUK.GC1.pro.richness <- colSums(make_binary(EUK.GC1.avr.pro.filt*1000000000000,2))
### plot
year1 <- 1950-ages$mean[match(names(EUK.P19.pro.richness),ages$ID2)]
value1 <- EUK.P19.pro.richness
year2 <- 1950-ages$mean[match(names(EUK.GC1.pro.richness),ages$ID2)]
value2 <- EUK.GC1.pro.richness
gam1 <- gam(value1 ~ s(year1,k=20), method = "REML")
gam2 <- gam(value2 ~ s(year2,k=20), method = "REML")
plot(gam1)
plot(gam2)
prediction <- data.frame("year1"=min(year1):max(year1))
prediction <- cbind(prediction,predict(gam1,newdata = prediction,se.fit = TRUE))
prediction$uppCI <- prediction$fit+prediction$se.fit*1.96
prediction$lwrCI <- prediction$fit-prediction$se.fit*1.96
prediction2 <- data.frame("year2"=min(year2):max(year2))
prediction2 <- cbind(prediction2,predict(gam2,newdata = prediction2,se.fit = TRUE))
prediction2$uppCI <- prediction2$fit+prediction2$se.fit*1.96
prediction2$lwrCI <- prediction2$fit-prediction2$se.fit*1.96
pdf("figures/EUK.pro.richness.pdf",height=4,width=10)
par(mar=c(4.1,4.1,2.1,6.1))
plot(1950-ages$mean[match(names(EUK.P19.pro.richness),ages$ID2)],
EUK.P19.pro.richness,
xlim=c(-1550,2000),bty = 'n',ylab="ASV richness",xlab="Year",
pch=16,col="slateblue")
points(1950-ages$mean[match(names(EUK.GC1.pro.richness),ages$ID2)],
EUK.GC1.pro.richness,
pch=16,col="lightblue4")
polygon(c(prediction$year, rev(prediction$year)), c(prediction$uppCI, rev(prediction$lwrCI)), col=add.alpha('mediumslateblue',0.3), border=NA)
points(prediction$year,prediction$fit,type="l",col="navyblue",lwd=3)
polygon(c(prediction2$year, rev(prediction2$year)), c(prediction2$uppCI, rev(prediction2$lwrCI)), col=add.alpha('lightblue4',0.3), border=NA)
points(prediction2$year,prediction2$fit,type="l",col="cadetblue4",lwd=3)
dev.off()
#bacteria
#PC19
EUK.P19.avr.bac.filt <- EUK.p19.avr.bac
#EUK.P19.avr.filt[EUK.P19.nREPS < 2] <- 0
EUK.P19.bac.richness <- colSums(make_binary(EUK.P19.avr.bac.filt*1000000000000,2))
#GC1
EUK.GC1.avr.bac.filt <- EUK.GC1.avr.bac
#EUK.GC1.avr.filt[EUK.GC1.nREPS < 2] <- 0
EUK.GC1.bac.richness <- colSums(make_binary(EUK.GC1.avr.bac.filt*1000000000000,2))
### plot
year1 <- 1950-ages$mean[match(names(EUK.P19.bac.richness),ages$ID2)]
value1 <- EUK.P19.bac.richness
year2 <- 1950-ages$mean[match(names(EUK.GC1.bac.richness),ages$ID2)]
value2 <- EUK.GC1.bac.richness
gam1 <- gam(value1 ~ s(year1,k=20), method = "REML")
gam2 <- gam(value2 ~ s(year2,k=20), method = "REML")
plot(gam1)
plot(gam2)
prediction <- data.frame("year1"=min(year1):max(year1))
prediction <- cbind(prediction,predict(gam1,newdata = prediction,se.fit = TRUE))
prediction$uppCI <- prediction$fit+prediction$se.fit*1.96
prediction$lwrCI <- prediction$fit-prediction$se.fit*1.96
prediction2 <- data.frame("year2"=min(year2):max(year2))
prediction2 <- cbind(prediction2,predict(gam2,newdata = prediction2,se.fit = TRUE))
prediction2$uppCI <- prediction2$fit+prediction2$se.fit*1.96
prediction2$lwrCI <- prediction2$fit-prediction2$se.fit*1.96
pdf("figures/EUK.bac.richness.pdf",height=4,width=10)
par(mar=c(4.1,4.1,2.1,6.1))
plot(1950-ages$mean[match(names(EUK.P19.bac.richness),ages$ID2)],
EUK.P19.bac.richness,
xlim=c(-1550,2000),bty = 'n',ylab="ASV richness",xlab="Year",
pch=16,col="slateblue",ylim=c(50,500))
points(1950-ages$mean[match(names(EUK.GC1.bac.richness),ages$ID2)],
EUK.GC1.bac.richness,
pch=16,col="lightblue4")
polygon(c(prediction$year, rev(prediction$year)), c(prediction$uppCI, rev(prediction$lwrCI)), col=add.alpha('mediumslateblue',0.3), border=NA)
points(prediction$year,prediction$fit,type="l",col="navyblue",lwd=3)
polygon(c(prediction2$year, rev(prediction2$year)), c(prediction2$uppCI, rev(prediction2$lwrCI)), col=add.alpha('lightblue4',0.3), border=NA)
points(prediction2$year,prediction2$fit,type="l",col="cadetblue4",lwd=3)
dev.off()
## subset richness @ 3 & 6 replicates
#PC19
par(mfrow=c(4,2))
for (num in 0:7){
EUK.P19.avr.filt <- EUK.P19.avr
EUK.P19.avr.filt[EUK.P19.nREPS < num] <- 0
plot(1950-ages$mean[match(gsub("(.*)_[0-9]$","\\1",colnames(EUK.P19.avr.filt)),ages$ID2)],colSums(make_binary(EUK.P19.avr.filt*100000000000,1)),ylab="",xlab="",pch=16,main=paste0("> ",num," +ive reps"))
}
#GC1
par(mfrow=c(4,2))
for (num in 0:7){
EUK.GC1.avr.filt <- EUK.GC1.avr
EUK.GC1.avr.filt[EUK.GC1.nREPS < num] <- 0
plot(1950-ages$mean[match(gsub("(.*)_[0-9]$","\\1",colnames(EUK.GC1.avr.filt)),ages$ID2)],colSums(make_binary(EUK.GC1.avr.filt*100000000000,1)),ylab="",xlab="",pch=16,main=paste0("> ",num," +ive reps"))
}
## effect of normalisation
## GC1
## calc raw richness
EUK.GC1.raw.richness <- colSums(make_binary(EUK.GC1,2))
## calc breakaway richness
EUK.richEst <- breakaway(EUK.GC1)
EUK.GC1.breakaway.richEstimate <- unlist(lapply(EUK.richEst,FUN = function(x){x[["estimate"]]}))
##cacl rarefy rich
EUK.GC1.rare.richness.1 <- colSums(make_binary(as.data.frame(t(rrarefy(t(EUK.GC1),7000))),2))
EUK.GC1.rare.richness.2 <- colSums(make_binary(as.data.frame(t(rrarefy(t(EUK.GC1),14000))),2))
## compare values
plot(EUK.GC1.raw.richness,EUK.GC1.breakaway.richEstimate)
plot(EUK.GC1.raw.richness,EUK.GC1.rare.richness.1)
plot(EUK.GC1.raw.richness,EUK.GC1.rare.richness.2)
EUK.GC1.mean.rich <- tapply(EUK.GC1.raw.richness,FUN=mean,INDEX = gsub("(.*)_[0-9]$","\\1",names(EUK.GC1.raw.richness)))
## plot vs time
pdf("figures/EUK.GC1.richness.pdf",width = 9,height = 6.5)
plot(ages$mean[match(gsub("(.*)_[0-9]$","\\1",colnames(EUK.GC1)),ages$ID2)],
colSums(make_binary(EUK.GC1,2)),
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness",
col="grey")
points(ages$mean[match(names(EUK.GC1.mean.rich),ages$ID2)],
EUK.GC1.mean.rich,
pch=16,
col="black",
cex=2)
dev.off()
plot(ages$mean[match(gsub("(.*)_[0-9]$","\\1",names(EUK.GC1)),ages$ID2)],
colSums(make_binary(as.data.frame(t(rrarefy(t(EUK.GC1),14000))),2)),
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness")
## with GAM
GC1.rich.gam.dat  <- data.frame("year"=ages$mean[match(names(EUK.GC1.mean.rich),ages$ID2)],
"richness"=EUK.GC1.mean.rich)
m <- gam(richness ~ s(year, k = 20), data = GC1.rich.gam.dat, method = "REML")
prediction <- data.frame("year"=280:3600)
prediction <- cbind(prediction,predict(m,prediction,se.fit=TRUE))
deriv <- gratia::derivatives(m)
prediction$uppCI <- prediction$fit+prediction$se.fit*1.96
prediction$lwrCI <- prediction$fit-prediction$se.fit*1.96
pdf("figures/EUK.GC1.richness.gam.pdf",width = 9,height = 4.5)
par(mar=c(5.1, 4.1, 1.1, 1.1))
plot(ages$mean[match(gsub("(.*)_[0-9]$","\\1",colnames(EUK.GC1)),ages$ID2)],
colSums(make_binary(EUK.GC1,2)),
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness",
col="grey")
polygon(c(prediction$year, rev(prediction$year)), c(prediction$uppCI, rev(prediction$lwrCI)), col=add.alpha('darkgrey',0.3), border=NA)
points(prediction$year,prediction$fit,lwd=5,col="black",type='l')
dev.off()
## P19
## calc raw richness
EUK.P19.raw.richness <- colSums(make_binary(EUK.P19,2))
## calc breakaway richness
EUK.richEst <- breakaway(EUK.P19)
EUK.P19.breakaway.richEstimate <- unlist(lapply(EUK.richEst,FUN = function(x){x[["estimate"]]}))
##cacl rarefy rich
EUK.P19.rare.richness.1 <- colSums(make_binary(as.data.frame(t(rrarefy(t(EUK.P19),7000))),2))
EUK.P19.rare.richness.2 <- colSums(make_binary(as.data.frame(t(rrarefy(t(EUK.P19),14000))),2))
## compare values
plot(EUK.P19.raw.richness,EUK.P19.breakaway.richEstimate)
plot(EUK.P19.raw.richness,EUK.P19.rare.richness.1)
plot(EUK.P19.raw.richness,EUK.P19.rare.richness.2)
EUK.P19.mean.rich <- tapply(EUK.P19.raw.richness,FUN=mean,INDEX = gsub("(.*)_[0-9]$","\\1",names(EUK.P19.raw.richness)))
## plot vs time
pdf("figures/EUK.P19.richness.pdf",width = 9,height = 6.5)
plot(ages$mean[match(gsub("(.*)_[0-9]$","\\1",colnames(EUK.P19)),ages$ID2)],
colSums(make_binary(EUK.P19,2)),
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness",
col="grey")
points(ages$mean[match(names(EUK.P19.mean.rich),ages$ID2)],
EUK.P19.mean.rich,
pch=16,
col="black",
cex=2)
dev.off()
plot(ages$mean[match(gsub("(.*)_[0-9]$","\\1",names(EUK.P19)),ages$ID2)],
colSums(make_binary(as.data.frame(t(rrarefy(t(EUK.P19),14000))),2)),
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness")
dev.off()
## with GAM
P19.rich.gam.dat  <- data.frame("year"=ages$mean[match(names(EUK.P19.mean.rich),ages$ID2)],
"richness"=EUK.P19.mean.rich)
m <- gam(richness ~ s(year, k = 20), data = P19.rich.gam.dat, method = "REML")
prediction <- data.frame("year"=200:3100)
prediction <- cbind(prediction,predict(m,prediction,se.fit=TRUE))
deriv <- gratia::derivatives(m)
prediction$uppCI <- prediction$fit+prediction$se.fit*1.96
prediction$lwrCI <- prediction$fit-prediction$se.fit*1.96
pdf("figures/EUK.P19.richness.gam.pdf",width = 9,height = 4.5)
par(mar=c(5.1, 4.1, 1.1, 1.1))
plot(ages$mean[match(gsub("(.*)_[0-9]$","\\1",colnames(EUK.P19)),ages$ID2)],
colSums(make_binary(EUK.P19,2)),
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness",
col="grey")
#ylim=c(500,1500))
polygon(c(prediction$year, rev(prediction$year)), c(prediction$uppCI, rev(prediction$lwrCI)), col=add.alpha('darkgrey',0.3), border=NA)
points(prediction$year,prediction$fit,lwd=5,col="black",type='l')
dev.off()
### Just metazoa
EUK.p19.avr.met.b <- make_binary((EUK.p19.avr.met)*1000000000000000,1)
EUK.p19.avr.met.tax <- EUK.tax.PR2[na.omit(match(rownames(EUK.p19.avr.met),EUK.tax.PR2$X.1)),]
EUK.p19.avr.met.tax$Genus[EUK.p19.avr.met.tax$Genus.1<80] <- NA
genus_richness_per_site <- apply(EUK.p19.avr.met.b, 2, function (x) length(unique(EUK.p19.avr.met.tax$Genus[which(x == 1)])))
P19.rich.gam.met  <- data.frame("year"=ages$mean[match(colnames(EUK.p19.avr.met),ages$ID2)],
"richness"=colSums(make_binary((EUK.p19.avr.met)*1000000000000000,1)),
"genera.richness"=genus_richness_per_site)
m <- gam(richness ~ s(year, k = 20), data = P19.rich.gam.met, method = "REML")
prediction <- data.frame("year"=200:3100)
prediction <- cbind(prediction,predict(m,prediction,se.fit=TRUE))
prediction$uppCI <- prediction$fit+prediction$se.fit*1.96
prediction$lwrCI <- prediction$fit-prediction$se.fit*1.96
m <- gam(genera.richness ~ s(year, k = 20), data = P19.rich.gam.met, method = "REML")
prediction2 <- data.frame("year"=200:3100)
prediction2 <- cbind(prediction2,predict(m,prediction2,se.fit=TRUE))
prediction2$uppCI <- prediction2$fit+prediction2$se.fit*1.96
prediction2$lwrCI <- prediction2$fit-prediction2$se.fit*1.96
## all
pdf("figures/EUK.P19.richness.gam.met.pdf",width = 9,height = 4.5)
plot(ages$mean[match(colnames(EUK.p19.avr.met),ages$ID2)],
colSums(make_binary((EUK.p19.avr.met)*1000000000000000,1)),
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness",
col="grey")
polygon(c(prediction$year, rev(prediction$year)), c(prediction$uppCI, rev(prediction$lwrCI)), col=add.alpha('darkgrey',0.3), border=NA)
points(prediction$year,prediction$fit,lwd=5,col="black",type='l')
dev.off()
## genus
pdf("figures/EUK.P19.richness.gam.met.genus.pdf",width = 9,height = 4.5)
plot(ages$mean[match(names(genus_richness_per_site),ages$ID2)],
genus_richness_per_site,
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness",
col="grey")
polygon(c(prediction2$year, rev(prediction2$year)), c(prediction2$uppCI, rev(prediction2$lwrCI)), col=add.alpha('darkgrey',0.3), border=NA)
points(prediction2$year,prediction2$fit,lwd=5,col="black",type='l')
dev.off()
### protists
EUK.p19.avr.pro.b <- make_binary((EUK.p19.avr.pro)*1000000000000000,1)
EUK.p19.avr.pro.tax <- EUK.tax.PR2[na.omit(match(rownames(EUK.p19.avr.pro),EUK.tax.PR2$X.1)),]
EUK.p19.avr.pro.tax$Genus[EUK.p19.avr.pro.tax$Genus.1<80] <- NA
genus_richness_per_site <- apply(EUK.p19.avr.pro.b, 2, function (x) length(unique(EUK.p19.avr.pro.tax$Genus[which(x == 1)])))
P19.rich.gam.pro  <- data.frame("year"=ages$mean[match(colnames(EUK.p19.avr.pro),ages$ID2)],
"richness"=colSums(make_binary((EUK.p19.avr.pro)*1000000000000000,1)),
"genera.richness"=genus_richness_per_site)
m <- gam(richness ~ s(year, k = 20), data = P19.rich.gam.pro, method = "REML")
prediction <- data.frame("year"=200:3100)
prediction <- cbind(prediction,predict(m,prediction,se.fit=TRUE))
prediction$uppCI <- prediction$fit+prediction$se.fit*1.96
prediction$lwrCI <- prediction$fit-prediction$se.fit*1.96
m <- gam(genera.richness ~ s(year, k = 20), data = P19.rich.gam.pro, method = "REML")
prediction2 <- data.frame("year"=200:3100)
prediction2 <- cbind(prediction2,predict(m,prediction2,se.fit=TRUE))
prediction2$uppCI <- prediction2$fit+prediction2$se.fit*1.96
prediction2$lwrCI <- prediction2$fit-prediction2$se.fit*1.96
## all
pdf("figures/EUK.P19.richness.gam.pro.pdf",width = 9,height = 4.5)
plot(ages$mean[match(colnames(EUK.p19.avr.pro),ages$ID2)],
colSums(make_binary((EUK.p19.avr.pro)*1000000000000000,1)),
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness",
col="grey")
polygon(c(prediction$year, rev(prediction$year)), c(prediction$uppCI, rev(prediction$lwrCI)), col=add.alpha('darkgrey',0.3), border=NA)
points(prediction$year,prediction$fit,lwd=5,col="black",type='l')
dev.off()
## genus
pdf("figures/EUK.P19.richness.gam.pro.genus.pdf",width = 9,height = 4.5)
plot(ages$mean[match(names(genus_richness_per_site),ages$ID2)],
genus_richness_per_site,
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness",
col="grey")
polygon(c(prediction2$year, rev(prediction2$year)), c(prediction2$uppCI, rev(prediction2$lwrCI)), col=add.alpha('darkgrey',0.3), border=NA)
points(prediction2$year,prediction2$fit,lwd=5,col="black",type='l')
dev.off()
### bacteria
EUK.p19.avr.bac.b <- make_binary((EUK.p19.avr.bac)*1000000000000000,1)
EUK.p19.avr.bac.tax <- EUK.tax.PR2[na.omit(match(rownames(EUK.p19.avr.bac),EUK.tax.PR2$X.1)),]
EUK.p19.avr.bac.tax$Genus[EUK.p19.avr.bac.tax$Genus.1<80] <- NA
genus_richness_per_site <- apply(EUK.p19.avr.bac.b, 2, function (x) length(unique(EUK.p19.avr.bac.tax$Genus[which(x == 1)])))
P19.rich.gam.bac  <- data.frame("year"=ages$mean[match(colnames(EUK.p19.avr.bac),ages$ID2)],
"richness"=colSums(make_binary((EUK.p19.avr.bac)*1000000000000000,1)),
"genera.richness"=genus_richness_per_site)
m <- gam(richness ~ s(year, k = 20), data = P19.rich.gam.bac, method = "REML")
prediction <- data.frame("year"=200:3100)
prediction <- cbind(prediction,predict(m,prediction,se.fit=TRUE))
prediction$uppCI <- prediction$fit+prediction$se.fit*1.96
prediction$lwrCI <- prediction$fit-prediction$se.fit*1.96
m <- gam(genera.richness ~ s(year, k = 20), data = P19.rich.gam.bac, method = "REML")
prediction2 <- data.frame("year"=200:3100)
prediction2 <- cbind(prediction2,predict(m,prediction2,se.fit=TRUE))
prediction2$uppCI <- prediction2$fit+prediction2$se.fit*1.96
prediction2$lwrCI <- prediction2$fit-prediction2$se.fit*1.96
## all
pdf("figures/EUK.P19.richness.gam.bac.pdf",width = 9,height = 4.5)
plot(ages$mean[match(colnames(EUK.p19.avr.bac),ages$ID2)],
colSums(make_binary((EUK.p19.avr.bac)*1000000000000000,1)),
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness",
col="grey")
polygon(c(prediction$year, rev(prediction$year)), c(prediction$uppCI, rev(prediction$lwrCI)), col=add.alpha('darkgrey',0.3), border=NA)
points(prediction$year,prediction$fit,lwd=5,col="black",type='l')
dev.off()
## genus
pdf("figures/EUK.P19.richness.gam.bac.genus.pdf",width = 9,height = 4.5)
plot(ages$mean[match(names(genus_richness_per_site),ages$ID2)],
genus_richness_per_site,
pch=16,
xlab="Cal yr BP",
ylab="ASV Richness",
col="grey")
polygon(c(prediction2$year, rev(prediction2$year)), c(prediction2$uppCI, rev(prediction2$lwrCI)), col=add.alpha('darkgrey',0.3), border=NA)
points(prediction2$year,prediction2$fit,lwd=5,col="black",type='l')
dev.off()
####====3.0 Specific taxa ====####
### lets make some fish plots
EUKtax.h <- read.csv("taxonomy/byHand/EUKtax_assigned1006.csv")
for (taxa in unique(EUKtax.h$Assignment[EUKtax.h$Level=="Genus"])){
loopASVs <- EUKtax.h$OTU[EUKtax.h$Assignment==taxa]
loopData1 <- colSums(EUK.P19[loopASVs,])
loopData1 <- tapply(loopData1 > 0, gsub("(.*)_[0-9]$","\\1",names(loopData1)), sum)
loopData2 <- colSums(EUK.GC1[loopASVs,])
loopData2 <- tapply(loopData2 > 0, gsub("(.*)_[0-9]$","\\1",names(loopData2)), sum)
pdf(paste0("figures/SpecificTaxa/EUK.",taxa,".pdf"),height=7,width = 9)
par(mfrow=c(2,1),mar=c(4.1, 4.1, 1.1, 1.1))
plot(1950-ages$mean[match(names(loopData1),ages$ID2)],jitter(as.numeric(loopData1)),main=paste0("PC19 Genus:",taxa),pch=16,xlab="Year (CE)",ylab="replicates +ive",xlim=c(-1550,1700))
plot(1950-ages$mean[match(names(loopData2),ages$ID2)],jitter(as.numeric(loopData2)),main=paste0("GC01 Genus:",taxa),pch=16,xlab="Year (CE)",ylab="replicates +ive",xlim=c(-1550,1700))
dev.off()
}
for (taxa in unique(EUKtax.h$Assignment[EUKtax.h$Level=="Family"])){
loopASVs <- EUKtax.h$OTU[EUKtax.h$Assignment==taxa]
loopData1 <- colSums(EUK.P19[loopASVs,])
loopData1 <- tapply(loopData1 > 0, gsub("(.*)_[0-9]$","\\1",names(loopData1)), sum)
loopData2 <- colSums(EUK.GC1[loopASVs,])
loopData2 <- tapply(loopData2 > 0, gsub("(.*)_[0-9]$","\\1",names(loopData2)), sum)
pdf(paste0("figures/SpecificTaxa/EUK.",taxa,".pdf"),height=7,width = 9)
par(mfrow=c(2,1),mar=c(4.1, 4.1, 1.1, 1.1))
plot(1950-ages$mean[match(names(loopData1),ages$ID2)],jitter(as.numeric(loopData1)),main=paste0("PC19 Family:",taxa),pch=16,xlab="Year (CE)",ylab="replicates +ive",xlim=c(-1550,1700))
plot(1950-ages$mean[match(names(loopData2),ages$ID2)],jitter(as.numeric(loopData2)),main=paste0("GC01 Family:",taxa),pch=16,xlab="Year (CE)",ylab="replicates +ive",xlim=c(-1550,1700))
dev.off()
}
for (taxa in unique(EUKtax.h$Assignment[EUKtax.h$Level=="Order"])){
loopASVs <- EUKtax.h$OTU[EUKtax.h$Assignment==taxa]
loopData1 <- colSums(EUK.P19[loopASVs,])
loopData1 <- tapply(loopData1 > 0, gsub("(.*)_[0-9]$","\\1",names(loopData1)), sum)
loopData2 <- colSums(EUK.GC1[loopASVs,])
loopData2 <- tapply(loopData2 > 0, gsub("(.*)_[0-9]$","\\1",names(loopData2)), sum)
pdf(paste0("figures/SpecificTaxa/EUK.",taxa,".pdf"),height=7,width = 9)
par(mfrow=c(2,1),mar=c(4.1, 4.1, 1.1, 1.1))
plot(1950-ages$mean[match(names(loopData1),ages$ID2)],jitter(as.numeric(loopData1)),main=paste0("PC19 Order:",taxa),pch=16,xlab="Year (CE)",ylab="replicates +ive",xlim=c(-1550,1700))
plot(1950-ages$mean[match(names(loopData2),ages$ID2)],jitter(as.numeric(loopData2)),main=paste0("GC01 Order:",taxa),pch=16,xlab="Year (CE)",ylab="replicates +ive",xlim=c(-1550,1700))
dev.off()
}
### Some plots for the composite plot
## lets do one of EUK cod first
taxa <- "Gadus"
loopASVs <- EUKtax.h$OTU[EUKtax.h$Assignment==taxa]
loopData1 <- colSums(EUK.P19[loopASVs,])
loopData1 <- tapply(loopData1 > 0, gsub("(.*)_[0-9]$","\\1",names(loopData1)), sum)
loopData2 <- colSums(EUK.GC1[loopASVs,])
loopData2 <- tapply(loopData2 > 0, gsub("(.*)_[0-9]$","\\1",names(loopData2)), sum)
DecProp.cod  <- c(loopData1,loopData2)
year1 <- 1950-ages$mean[match(names(loopData1),ages$ID2)]
value1 <- as.numeric(loopData1)
year2 <- 1950-ages$mean[match(names(loopData2),ages$ID2)]
value2 <- as.numeric(loopData2)
gam1 <- gam(value1 ~ s(year1,k=20), method = "REML")
gam2 <- gam(value2 ~ s(year2,k=20), method = "REML")
plot(gam1)
plot(gam2)
prediction <- data.frame("year1"=min(year1):max(year1))
prediction <- cbind(prediction,predict(gam1,newdata = prediction,se.fit = TRUE))
prediction$uppCI <- prediction$fit+prediction$se.fit*1.96
prediction$lwrCI <- prediction$fit-prediction$se.fit*1.96
prediction2 <- data.frame("year2"=min(year2):max(year2))
prediction2 <- cbind(prediction2,predict(gam2,newdata = prediction2,se.fit = TRUE))
prediction2$uppCI <- prediction2$fit+prediction2$se.fit*1.96
prediction2$lwrCI <- prediction2$fit-prediction2$se.fit*1.96
pdf("figures/fig2/codDNA.pdf",height=3,width=10)
par(mar=c(4.1,4.1,2.1,6.1))
plot(year1,value1,pch=16,col="slateblue",
xlim=c(-1550,2000),bty = 'n',xaxt='n',yaxt='n',ylab=expression(italic(Gadus) ~ " eDNA DetectionProp"),xlab="",col.lab ="navyblue")
axis(2,at=c(0,2,4,6,8),label=c(0,0.25,0.5,0.75,1.0),las=1,cex.axis=0.8)
points(year2,value2,pch=16,col="lightblue4")
abline(h=4,lty=2,col="grey")
polygon(c(prediction$year, rev(prediction$year)), c(prediction$uppCI, rev(prediction$lwrCI)), col=add.alpha('mediumslateblue',0.3), border=NA)
points(prediction$year,prediction$fit,type="l",col="navyblue",lwd=3)
polygon(c(prediction2$year, rev(prediction2$year)), c(prediction2$uppCI, rev(prediction2$lwrCI)), col=add.alpha('lightblue4',0.3), border=NA)
points(prediction2$year,prediction2$fit,type="l",col="cadetblue4",lwd=3)
dev.off()
value1
loopData1
write.csv("~/Desktop/test.csv",c(names(loopData1),names(loopData2)))
write.csv(c(names(loopData1),names(loopData2)),"~/Desktop/test.csv")
